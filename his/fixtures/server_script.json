[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.094430",
  "module": "HIS",
  "name": "Emergency",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Que",
  "script": "if  doc.department==\"Emergency\":\n    frappe.get_doc({\n        \"doctype\": \"Emergency\",\n        \"patient\": doc.patient,\n        \"practitioner\": doc.practitioner,\n        \"que\": doc.name,\n        # \"owner\" : \"inpatient@mshospital.so\"\n    }).insert()\n    if frappe.db.exists(\"Que\" , doc.name):\n        old_que = frappe.get_doc(\"Que\" , doc.name)\n        old_que.status = \"Closed\" \n        # old_que.patient_encounter = doc.name\n        old_que.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-09-06 13:45:07.506394",
  "module": "HIS",
  "name": "Auto Bill",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "ip_occupancy = frappe.db.sql(\"\"\"select * from `tabInpatient Occupancy` ;\"\"\" , as_dict = True )\nif ip_occupancy:\n    \n    for ipo in ip_occupancy:\n        if ipo.parent:\n            ip = frappe.get_doc(\"Inpatient Record\" , ipo.parent)\n            if ip.status == \"Admitted\":\n                patientinfo = frappe.get_doc(\"Patient\" , ip.patient)\n                service_unit_type = frappe.get_doc(\"Healthcare Service Unit Type\", frappe.db.get_value(\"Healthcare Service Unit\", ipo.service_unit, \"service_unit_type\"))\n                patient = ip.patient\n                patient_name = ip.patient_name\n                customer = patientinfo.customer\n                item_code = service_unit_type.item\n                rate = service_unit_type.rate\n                desc = service_unit_type.description\n                remark = ipo.service_unit\n                practitioner = ip.admission_practitioner\n                medical_department = ip.medical_department\n                salesdoc = frappe.get_doc({\n                           \n                         \n                            \"patient\": patient,\n                            \"patient_name\": patient_name,\n                            \"customer\" : customer,\n                            \"is_pos\" : 0,\n                            \"so_type\": \"Cashiers\",\n                \n                            'due_date' : frappe.utils.getdate(),\n                        \n                            \"remarks\" : remark,\n                            \"posting_date\" : frappe.utils.getdate(),\n                           \n                          \n                            \"doctype\": \"Sales Invoice\",\n                      \n                            \"ref_practitioner\" : practitioner,\n                            \"cost_center\": \"Hospital - JSH\",\n                            \n                            \"items\": [\n                                {\n                                \"item_code\": item_code,\n                                    \"item_name\": item_code,\n                                    \"description\": desc,\n                                    \"warehouse\":\"stores - JSH\",\n                                 \n                \n                                    \"qty\": 1,\n                \n                                    \"rate\": rate,\n    \n                \n                                    \"doctype\": \"Sales Invoice Item\",\n                \n                                }\n                            ],\n                \n                        })\n                \n                salesdoc.insert()\n                salesdoc.submit()",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.252318",
  "module": "HIS",
  "name": "Bill To",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_inpatient and doc.outstanding_amount>0 and not doc.is_return:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer' )\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name' )\n    To_patient_name=frappe.db.get_value('Patient', doc.bill_to_patient, 'patient_name' )\n    To_patient=frappe.db.get_value('Patient', doc.bill_to_patient, 'customer' )\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"1310 - Debtors - \"+abbr,\n\t\t\t\"party_type\": \"Customer\",\n\t\t\t\"party\" : To_patient,\n\t\t\t\"debit_in_account_currency\": doc.outstanding_amount,\n\t\t    \"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"credit_in_account_currency\": doc.outstanding_amount,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n    jou = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Transfered from Patient {From_patient_name} to Patient {To_patient_name}\",\n    \t\t\"accounts\": account,\n    \t\t\"patient_name\" : From_patient_name,\n    \t\t\"patient\": doc.patient,\n    \t\t\"sales_invoice\" : doc.name\n    \t\t\n    \t})\n    jou.insert(ignore_permissions = True)\n    jou.submit()\n    \nif doc.is_insurance and doc.outstanding_amount>0:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer')\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name')\n    insurance_name=frappe.db.get_value('Customer', doc.insurance, 'customer_name' )\n    To_patient=doc.insurance\n    account = [\n\t\t{\n\t\t\t\"account\":\"1310 - Debtors - \"+abbr,\n\t\t\t\"party_type\": \"Customer\",\n\t\t\t\"party\" : doc.insurance,\n\t\t\t\"debit_in_account_currency\": doc.outstanding_amount,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"credit_in_account_currency\": doc.outstanding_amount,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t\n\t\t},\n    ]\n    frappe.errprint(account)\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Transfered from Patient  {From_patient_name} to Insurance {insurance_name} Invoice Number {doc.name}\",\n    \t\t\"accounts\": account,\n    \t\t\"sales_invoice\" : doc.name,\n    \t\t\"patient\": doc.patient,\n    \t\t\"patient_name\": From_patient_name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\n\nif doc.bill_to_employee and doc.outstanding_amount>0:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer')\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name')\n    To_empl=frappe.db.get_value('Employee', doc.employee, 'employee_name' )\n    To_patient=doc.employee\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"2110 - Creditors - \"+abbr,\n\t\t\t\"party_type\": \"Employee\",\n\t\t\t\"party\" : doc.employee,\n\t\t\t\"debit_in_account_currency\": doc.outstanding_amount,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"credit_in_account_currency\": doc.outstanding_amount,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n    # frappe.errprint(account)\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Transfered from Patient  {From_patient_name} to Employee {To_empl} Invoice Number {doc.name}\",\n    \t\t\"accounts\": account,\n    \t\t\"patient\": doc.patient,\n    \t\t\"patient_name\": doc.patient_name,\n    \t\t\"sales_invoice\" : doc.name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\n\n\n\n\n#Refurn Reverse bill to ...\npaid_amount = doc.paid_amount if doc.paid_amount else 0\ndifference = abs(paid_amount - doc.grand_total)\nif doc.bill_to_employee and doc.is_return and difference>0:\n    # frappe.msgprint(doc.grand_total)\n    # frappe.msgprint(doc.paid_amount)\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer')\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name')\n    To_empl=frappe.db.get_value('Employee', doc.employee, 'employee_name' )\n    To_patient=doc.employee\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"2110 - Creditors - \"+abbr,\n\t\t\t\"party_type\": \"Employee\",\n\t\t\t\"party\" : doc.employee,\n\t\t\t\"credit_in_account_currency\": difference,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"debit_in_account_currency\": difference,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n    # frappe.errprint(account)\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Refund from Patient  {From_patient_name} to Employee {To_empl} Invoice Number {doc.name}\",\n    \t\t\"accounts\": account,\n    \t\t\"patient\": doc.patient,\n    \t\t\"patient_name\": doc.patient_name,\n    \t\t\"sales_invoice\" : doc.name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\n\nif doc.is_inpatient and  doc.is_return and difference>0:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer' )\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name' )\n    To_patient_name=frappe.db.get_value('Patient', doc.bill_to_patient, 'patient_name' )\n    To_patient=frappe.db.get_value('Patient', doc.bill_to_patient, 'customer' )\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"1310 - Debtors - \"+abbr,\n\t\t\t\"party_type\": \"Customer\",\n\t\t\t\"party\" : To_patient,\n            \"credit_in_account_currency\": difference,\n\t\t    \"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"debit_in_account_currency\": difference,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n    jou = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Refunded from Patient {From_patient_name} to Patient {To_patient_name}\",\n    \t\t\"accounts\": account,\n    \t\t\"patient_name\" : From_patient_name,\n    \t\t\"patient\": doc.patient,\n    \t\t\"sales_invoice\" : doc.name\n    \t\t\n    \t})\n    jou.insert(ignore_permissions = True)\n    jou.submit()\n    \nif doc.is_insurance and doc.is_return and difference:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    From_patient=frappe.db.get_value('Patient', doc.patient, 'customer')\n    From_patient_name=frappe.db.get_value('Patient', doc.patient, 'patient_name')\n    insurance_name=frappe.db.get_value('Customer', doc.insurance, 'customer_name' )\n    To_patient=doc.insurance\n    account = [\n\t\t{\n\t\t\t\"account\":\"1310 - Debtors - \"+abbr,\n\t\t\t\"party_type\": \"Customer\",\n\t\t\t\"party\" : doc.insurance,\n\t\t\t\"credit_in_account_currency\": difference,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": \"1310 - Debtors - \"+abbr,\n\t\t\t'party_type': \"Customer\",\n\t\t\t\"party\" : From_patient,\n\t\t\t\"debit_in_account_currency\": difference,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t\n\t\t},\n    ]\n    frappe.errprint(account)\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : frappe.utils.getdate(),\n    \t\t\"user_remark\": f\"Refunded from Patient  {From_patient_name} to Insurance {insurance_name} Invoice Number {doc.name}\",\n    \t\t\"accounts\": account,\n    \t\t\"sales_invoice\" : doc.name,\n    \t\t\"patient\": doc.patient,\n    \t\t\"patient_name\": From_patient_name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\n\n\n# for item in doc.items:\n#     if item.item_group== \"CT Scan\":\n#         account = [\n\t\t\t\n#     \t\t{\n    \t\t    \n#     \t\t    \"account\": \"Creditors - XH\",\n#     \t\t\t'party_type': \"Supplier\",\n#     \t\t\t\"party\" : \"kaamil Diagnostic Center\",\n#     \t\t\t\"credit_in_account_currency\": 10\n    \t\t\t\n    \t\t\n#     \t\t},\n#     \t\t{\n#     \t\t\"account\": \"CT Scan Commision - XH\",\n#     \t\t\"debit_in_account_currency\": 10,\n#     \t\t},\n#             ]\n#         j = frappe.get_doc({\n#     \t\t'doctype': 'Journal Entry',\n#     \t\t'voucher_type': 'Journal Entry',\n#     \t\t\"posting_date\" : frappe.utils.getdate(),\n#     \t\t\"user_remark\": f\"This is CT Scan Commission from  Patient {doc.patient_name} Invoice Number {doc.name}\",\n#     \t\t\"accounts\": account,\n#     \t\t\"sales_invoice\" : doc.name\n    \t\t\n#     \t})\n#         j.insert(ignore_permissions = True)\n#         # doc.submit()\n    \n \n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-23 12:51:06.918170",
  "module": "HIS",
  "name": "On Cancel Sales Invoice",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"sales_invoice\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"sales_invoice\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()\n\nsample_collection_name = frappe.db.get_value(\"Sample Collection\",{\"reff_invoice\": doc.name, \"docstatus\": 0},\"name\")\nif sample_collection_name:\n    sc = frappe.get_doc(\"Sample Collection\", sample_collection_name)\n    sc.delete(ignore_permissions=1)  # drafts can be deleted directly\nradiology_name = frappe.db.get_value(\"Radiology\",{\"reff_invoice\": doc.name, \"docstatus\": 0},\"name\")\nif radiology_name:\n    r = frappe.get_doc(\"Radiology\", radiology_name)\n    r.delete(ignore_permissions=1)  # drafts can be deleted directly",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.204441",
  "module": "HIS",
  "name": "Employee Rece",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Receipt",
  "script": "if not doc.paid_amount > doc.balance:\n  \n    account = [\n    \t\t\n    \t{\n    \t\t    \n    \t\t    \"account\": \"2110 - Creditors - JSH\",\n    \t\t\t'party_type': \"Employee\",\n    \t\t\t\"party\" : doc.employee,\n    \t\t\t\"credit_in_account_currency\": doc.paid_amount\n    \t\t\t\n    \t\t\n    \t\t},\n    \t\t{\n    \t\t\"account\": doc.paid_to,\n    \t\t\"debit_in_account_currency\": doc.paid_amount,\n    \t\t},\n    ]\n    # frappe.errprint(account)\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t'voucher_type': 'Journal Entry',\n    \t\t\"posting_date\" : doc.date,\n    \t\t\"user_remark\": doc.remarks,\n    \t\t\"accounts\": account,\n    \t\t\"employee_receivable\" : doc.name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\nelse:\n    frappe.throw('Paid amount is greater then employee Balance')\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.618888",
  "module": "HIS",
  "name": "Cancel Employee rec",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Receipt",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"employee_receivable\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"employee_receivable\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.526337",
  "module": "HIS",
  "name": "VAT",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Order",
  "script": "frappe.db.set_value(\"Sales Order\", doc.name, { \"total_with_vat\": (doc.grand_total * 1.05)});",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.603632",
  "module": "HIS",
  "name": "VAT PAYMENT",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.total_taxes_and_charges and doc.is_pos:\n    # Subtract the tax amount from the first payment row\n    if doc.payments:\n        # Assuming the first row is the sales amount row\n        first_payment = doc.payments[0]\n        first_payment.amount = doc.net_total\n        \n        # Check if a VAT payment row already exists\n        vat_exists = False\n        for payment in doc.payments:\n            if payment.mode_of_payment == \"VAT\":\n                vat_exists = True\n                break\n        \n        # Append the VAT payment row only if it doesn't exist\n        if not vat_exists:\n            doc.append(\"payments\", {\n                \"mode_of_payment\": \"VAT\",\n                \"amount\": doc.total_taxes_and_charges\n            })\n    else:\n        frappe.errprint(\"Error: No payments found to update.\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.221778",
  "module": "HIS",
  "name": "Commission Transfer",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.is_pos and doc.commission>0 and not doc.is_return:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    account=[]\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"52020 - Commission on Sales - \"+abbr,\n\t\t\t\"debit_in_account_currency\": doc.commission,\n\t\t    \"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": doc.payments[0].account,\n\t\t\t\"credit_in_account_currency\": doc.commission,\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n        \n    if account:\n        jou = frappe.get_doc({\n        \t\t'doctype': 'Journal Entry',\n        \t\t'voucher_type': 'Journal Entry',\n        \t\t\"posting_date\" : frappe.utils.getdate(),\n        \t\t\"user_remark\": doc.comment,\n        \t\t\"accounts\": account,\n        \t\t\"sales_invoice\" : doc.name\n        \t\t\n        \t})\n        jou.insert(ignore_permissions = True)\n        jou.submit()\n\n\n\n\n\nif doc.is_pos and (doc.commission)>0 and doc.is_return:\n    abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n    account=[]\n    account = [\n\t\t\t\n\t\t{\n\t\t\t\"account\":\"52020 - Commission on Sales - \"+abbr,\n\t\t\t\"credit_in_account_currency\": (doc.commission),\n\t\t    \"cost_center\": doc.cost_center\n\t\t},\n\t\t{\n\t\t\t\"account\": doc.payments[0].account,\n# \t\t\t\"credit_in_account_currency\": doc.commission,\n            \"debit_in_account_currency\": (doc.commission),\n\t\t\t\"cost_center\": doc.cost_center\n\t\t},\n    ]\n        \n    if account:\n        jou = frappe.get_doc({\n        \t\t'doctype': 'Journal Entry',\n        \t\t'voucher_type': 'Journal Entry',\n        \t\t\"posting_date\" : frappe.utils.getdate(),\n        \t\t\"user_remark\": doc.comment,\n        \t\t\"accounts\": account,\n        \t\t\"sales_invoice\" : doc.name\n        \t\t\n        \t})\n        jou.insert(ignore_permissions = True)\n        jou.submit()\n        frappe.db.set_value(\"Sales Invoice\",{\"name\":doc.name},{\"commission\": doc.commission * - 1 })\n\n        # doc.commission\n        \n        \n# if not doc.is_pos and doc.commission>0 and not doc.is_return:\n#     abbr= frappe.db.get_value(\"Company\", doc.company, \"abbr\")\n#     account = [\n\t\t\t\n# \t\t{\n# \t\t\t\"account\":\"52020 - Commission on Sales - \"+abbr,\n# \t\t\t\"debit_in_account_currency\": doc.commission,\n# \t\t    \"cost_center\": doc.cost_center\n# \t\t},\n# \t\t{\n# \t\t\t\"account\": \"2110 - Creditors - \"+abbr,\n# \t\t\t\"party_type\": \"Supplier\",\n# \t\t\t\"party\": doc.supplier,\n# \t\t\t\"credit_in_account_currency\": doc.commission,\n# \t\t\t\"cost_center\": doc.cost_center\n# \t\t},\n#     ]\n#     if account:\n#         jou = frappe.get_doc({\n#         \t\t'doctype': 'Journal Entry',\n#         \t\t'voucher_type': 'Journal Entry',\n#         \t\t\"posting_date\" : frappe.utils.getdate(),\n#         \t\t\"user_remark\": doc.comment,\n#         \t\t\"accounts\": account,\n#         \t\t\"sales_invoice\" : doc.name\n        \t\t\n#         \t})\n#         jou.insert(ignore_permissions = True)\n#         jou.submit()\n      ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.459320",
  "module": "HIS",
  "name": "Avoid Deplicate Que",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Que",
  "script": "quedoc = frappe.db.get_list('Que', \n    filters={\n        'date': doc.date, \n        'patient': doc.patient, \n        'practitioner': doc.practitioner,\n        'name': ['!=', doc.name] , # This line filters out the current document by its name\n        'status': 'open' # This line filters out the current document by its name\n    }, \n    fields=['name']\n)\n\nif quedoc:\n    frappe.throw(f\"This Patient {doc.patient_name} has an appointment with doctor {doc.practitioner}  on Today\")\n\n# if doc.gender == \"Male\" and doc.department==\"OBS AND GYNO\":\n#     frappe.throw(\"The Patient is Male and the doctor department is OBS AND GYNO, So Please Change The Male to make this Appointment!!\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.571507",
  "module": "HIS",
  "name": "Consumable and Billible",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Clinical Procedure",
  "script": "if doc.consumable_items:\n\titems = []\n\tfor item in doc.consumable_items:\n\t\t\titems.append({\n\t\t\t\t\"item_code\" : item.item_code,\n\t\t\t\t\"qty\" : item.qty,\n\t\t\t\t\n\t\t\t})\n\tfrappe.errprint(items)\n\tstock_ent = frappe.get_doc({\n\t\t\"doctype\" : \"Stock Entry\",\n\t\t\"posting_date\" : frappe.utils.nowdate(),\n\t\t\"stock_entry_type\": \"Material Issue\",\n\t\t\"company\" : doc.company,\n\t\t\"from_warehouse\": doc.source_warehouse,\n\t\t\"items\" : items,\n\t\t})\n\tstock_ent.insert(ignore_permissions = True)\n\tstock_ent.submit()\n\t# doc.db_set(\"status\", \"Completed\")\n\t# return stock_ent\n\nif doc.procedure_items:\n\tpro_items = []\n\tfor item in doc.procedure_items:\n\t\t\tpro_items.append({\n\t\t\t\t\"item_code\" : item.item_code,\n\t\t\t\t\"qty\" : item.qty\n\t\t\t})\n\tcustomer_to = frappe.db.get_value(\"Patient\", doc.patient, \"customer\")\n\tsales_doc = frappe.get_doc({\n\t\t\"doctype\" : \"Sales Invoice\",\n\t\t\"posting_date\" : frappe.utils.nowdate(),\n\t\t\"customer\": customer_to,\n\t\t\"patient\" : doc.patient,\n\t\t\"so_type\": \"Pharmacy\",\n\t\t\"cost_center\": \"Hospital - JSH\",\n\t\t\"is_pos\" : 0,\n\t\t\"items\" : pro_items,\n\t\t})\n\tsales_doc.insert(ignore_permissions = True)\n\tsales_doc.submit()\n\tdoc.db_set(\"status\", \"Completed\")\n\t# return sales_doc\n\nfrappe.get_doc({\n    \"doctype\": \"Recovery\",\n    \"patient\" : doc.patient,\n    \"procedure_template\": doc.procedure_template,\n    \"practitioner\" : doc.practitioner\n}).insert()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.589477",
  "module": "HIS",
  "name": "Maternity Card",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Meternity Card",
  "script": "if doc.sex == \"Male\":\n    frappe.throw(\"Male Patient Can not make Pre Delivery!!\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.555712",
  "module": "HIS",
  "name": "Transfer Patient Balance",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Transfer Patient Balance",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"transfer_patient_balance\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"transfer_patient_balance\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.436895",
  "module": "HIS",
  "name": "Transfer Patient Balances",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Transfer Patient Balance",
  "script": "if float(doc.transferred_amount) > float(doc.patient_balance):\n    frappe.throw(\"Transfered Amount is greater then Patient Balance!!\")\nif doc.patient_balance>0:\n    accounts = []\n    part_t=''\n    acc='1310 - Debtors - JSH'\n    party=''\n    # frappe.errprint(doc.party)\n    if doc.party_type==\"Patient\":\n        part_t= \"Customer\"\n        # acc= \"1310 - Debtors - JSH\",\n        party= frappe.db.get_value(\"Patient\", doc.party, \"customer\")\n        \n    elif doc.party_type==\"Customer\":\n        part_t= \"Customer\"\n        # acc= \"1310 - Debtors - JSH\",\n        party=doc.party\n        \n    elif doc.party_type==\"Employee\":\n        part_t=\"Employee\"\n        acc= \"2110 - Creditors - JSH\"\n        party=doc.party\n    \n    \n    if acc:\n        accounts=[{\n            \"account\": acc or \"1310 - Debtors - JSH\",\n            \"party_type\": part_t,\n            \"party\": party,\n            \"debit_in_account_currency\": doc.transferred_amount,\n            \"cost_center\": doc.cost_center\n        \n            },\n            {\n            \"account\": \"1310 - Debtors - JSH\",\n            \"party_type\": \"Customer\",\n            \"party\": doc.customer,\n            \"credit_in_account_currency\": doc.transferred_amount,\n            \"cost_center\": doc.cost_center,\n            }]\n    \n    if accounts:\n        Journal = frappe.get_doc({\n        \t\t'doctype': 'Journal Entry',\n        \t\t\"posting_date\" : doc.date,\n        \t\t\"accounts\": accounts,\n        \t    \"user_remark\": doc.remarks,\n        \t\t\"transfer_patient_balance\" : doc.name\n        \t\t\n        \t})\n        Journal.insert(ignore_permissions = True)\n        Journal.submit()\nelse:\n    frappe.throw(\"Patient Balance Is les Then 0\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.031922",
  "module": "HIS",
  "name": "Return Update Amount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "mode_of_payment=''\npos_profile=''\ndefault_account = ''\nreturn_amount = 0\nif doc.is_pos and doc.is_return and not doc.voucher_no:\n    pos_profile= frappe.db.get_value(\"POS Profile User\", {\"default\": 1, \"user\": frappe.session.user}, \"parent\")\n    if pos_profile:\n        mode_of_payment = frappe.db.get_value(\"POS Payment Method\",{\"parent\": pos_profile}, \"mode_of_payment\") \n    if mode_of_payment:\n        \n        default_account = frappe.db.get_value('Mode of Payment Account', {\"parent\": mode_of_payment},  'default_account')\n    if default_account:\n        doc.payments[0].mode_of_payment= mode_of_payment\n        doc.payments[0].account =default_account\n    doc.payments[0].amount= doc.grand_total\n    \n\n\nif doc.is_return and not doc.voucher_no:\n    for i in doc.items:\n        i.reference_dn=\"\"\n        i.reference_dt=\"\"\n        i.sales_invoice_item =\"\"\n        i.so_detail =\"\"\n        i.sales_order =\"\"\n\n\n\ncust_balance = frappe.call(\n    \"erpnext.accounts.utils.get_balance_on\",\n    date=frappe.utils.getdate(),\n    party_type='Customer',\n    party=doc.customer\n)\n\n# if doc.is_return and not doc.voucher_no:\n#     if doc.paid_amount:\n#         return_amount = ((doc.grand_total * -1)-(doc.paid_amount * -1 or 0))\n#     else:\n#         return_amount = (doc.grand_total * -1)\n#     if return_amount > cust_balance:\n#         frappe.throw(f\"Returning amount is greater Then customer Balance because customer balance is {cust_balance} and Returning amount is {return_amount} \")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.420987",
  "module": "HIS",
  "name": "Sample Collection Upda",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sample Collection",
  "script": "doc.status =\"Collected\"\ndoc.collected_by= frappe.session.user\ndoc.collected_time = frappe.utils.now()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.490556",
  "module": "HIS",
  "name": "Check if Order Is billed",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Patient Encounter",
  "script": "if doc.services_so:\n    sales_order_service = frappe.get_doc(\"Sales Order\", doc.services_so)\n    if sales_order_service.status == \"Completed\":\n        frappe.throw(\"Service Orders already Billed so it can't change it!!!\")\nif  doc.medication_so:\n    sales_order_medication = frappe.get_doc(\"Sales Order\", doc.medication_so)\n    \n    if sales_order_medication.status == \"Completed\":\n        frappe.throw(\"Pharmacy Orders already Billed so it can't change it!!!\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-09-06 13:45:07.540490",
  "module": "HIS",
  "name": "Make Salary Assigment",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "employee_list = frappe.db.get_list(\"Employee\" , fields = ['name', 'salary'  ] , filters = {\"status\" : \"Active\"})\nfor emp in employee_list:\n    assigment = frappe.new_doc(\"Salary Structure Assignment\")\n    assigment.employee = emp.name\n    assigment.from_date = \"2025-01-01\"\n    assigment.salary_structure = \"Emp Salary\"\n    assigment.payroll_payable_account = \"2120 - Payroll Payable - JSH\"\n    assigment.base = emp.salary\n    \n    assigment.insert()",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.183805",
  "module": "HIS",
  "name": "Cheking if refurned",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sample Collection",
  "script": "sales_invoice= frappe.get_doc(\"Sales Invoice\", doc.reff_invoice)\nif sales_invoice.status == \"Credit Note Issued\":\n    frappe.throw(\"Lab Tests is refunded!!\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.159761",
  "module": "HIS",
  "name": "Check If Paid amount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.paid_amount > doc.grand_total:\n    if doc.payments:  # Check if the payments list is not empty\n        doc.payments[0].amount = doc.grand_total\nif doc.is_return and not doc.voucher_no:\n    # Fetch the linked Que document\n    que_name = frappe.db.get_value(\"Que\", {\"sales_invoice\": doc.return_against}, \"name\")\n\n    if que_name:\n        que = frappe.get_doc(\"Que\", que_name)\n        \n        # Check if the Que document is closed\n        if que:\n            if que.status == \"Closed\":\n                frappe.throw((\"Lama celi karo Invoice-kaa sababtoo ah dhakhtarta waa uu qaabikay bukaankaan!!\"))\n        \n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.401684",
  "module": "HIS",
  "name": "Lab Result Update User",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Lab Result",
  "script": "doc.user= frappe.session.user",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.363090",
  "module": "HIS",
  "name": "Patient Discount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Patient Discount",
  "script": "if float(doc.transferred_amount) > float(doc.patient_balance):\n    frappe.throw(\"Discount Amount is greater then Patient Balance!!\")\nif doc.patient_balance>0:\n    accounts = []\n    # if acc:\n    accounts=[{\n        \"account\": doc.account,\n        \"debit_in_account_currency\": doc.transferred_amount,\n        \"cost_center\": doc.cost_center\n    \n        },\n        {\n        \"account\": \"1310 - Debtors - JSH\",\n        \"party_type\": \"Customer\",\n        \"party\": doc.customer,\n        \"credit_in_account_currency\": doc.transferred_amount,\n        \"cost_center\": doc.cost_center,\n        }]\n    \n    if accounts:\n        Journal = frappe.get_doc({\n        \t\t'doctype': 'Journal Entry',\n        \t\t\"posting_date\" : doc.date,\n        \t\t\"accounts\": accounts,\n        \t    \"user_remark\": doc.remarks,\n        \t\t\"patient_discount\" : doc.name\n        \t\t\n        \t})\n        Journal.insert(ignore_permissions = True)\n        Journal.submit()\nelse:\n    frappe.throw(\"Patient Balance Is les Then 0\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.382570",
  "module": "HIS",
  "name": "Cancel Patient Discount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Patient Discount",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"patient_discount\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"patient_discount\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.343751",
  "module": "HIS",
  "name": "Daily Cash Transfer",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Daily Cash Transfer",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"daily_cash_transfer\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"daily_cash_transfer\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.297230",
  "module": "HIS",
  "name": "Daily Cash Transfer Journl",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Daily Cash Transfer",
  "script": "\naccounts = []\n# if acc:\nfor to_account in doc.to_account:\n    accounts.append({\n        \"account\": to_account.account,\n        \"debit_in_account_currency\": to_account.amount,\n        \"cost_center\" : doc.cost_center,\n    \n        })\nfor from_account in doc.from_account:\n    accounts.append({\n        \"account\": from_account.account,\n        \"credit_in_account_currency\": from_account.amount,\n        \"cost_center\" : doc.cost_center,\n    \n        })\n\n\nif accounts:\n    Journal = frappe.get_doc({\n    \t\t'doctype': 'Journal Entry',\n    \t\t\"posting_date\" : doc.date,\n    \t\t\"accounts\": accounts,\n    \t    \"user_remark\": doc.remarks,\n    \t\t\"daily_cash_transfer\" : doc.name\n    \t\t\n    \t})\n    Journal.insert(ignore_permissions = True)\n    Journal.submit()\nelse:\n    frappe.throw(\"Patient Balance Is les Then 0\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.327691",
  "module": "HIS",
  "name": "Cancel Employee Discount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Discount",
  "script": "if frappe.db.get_value(\"Journal Entry\", {\"employee_discount\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Journal Entry\",frappe.db.get_value(\"Journal Entry\", {\"employee_discount\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.311695",
  "module": "HIS",
  "name": "Employee Discount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Discount",
  "script": "if float(doc.transferred_amount) > float(doc.employee_balance):\n    frappe.throw(\"Discount Amount is greater then Patient Balance!!\")\nif doc.employee_balance>0:\n    accounts = []\n    # if acc:\n    accounts=[{\n        \"account\": doc.account,\n        \"debit_in_account_currency\": doc.transferred_amount,\n        \"cost_center\": doc.cost_center\n    \n        },\n        {\n        \"account\": \"2110 - Creditors - JSH\",\n        \"party_type\": \"Employee\",\n        \"party\": doc.employee,\n        \"credit_in_account_currency\": doc.transferred_amount,\n        \"cost_center\": doc.cost_center,\n        }]\n    \n    if accounts:\n        Journal = frappe.get_doc({\n        \t\t'doctype': 'Journal Entry',\n        \t\t\"posting_date\" : doc.date,\n        \t\t\"accounts\": accounts,\n        \t    \"user_remark\": doc.remarks,\n        \t\t\"employee_discount\" : doc.name\n        \t\t\n        \t})\n        Journal.insert(ignore_permissions = True)\n        Journal.submit()\nelse:\n    frappe.throw(\"Patient Balance Is les Then 0\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.283802",
  "module": "HIS",
  "name": "Blood Bank",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "for item in doc.items:\n    if item.item_group== \"Blood Bank\":\n        j = frappe.get_doc({\n    \t\t'doctype': 'Blood Banks',\n    \t\t'pid': doc.patient,\n    \t\t\"doctor\" : doc.ref_practitioner,\n    \t\t\"blood_product\": item.item_code\n    \t\n    \t})\n        j.insert(ignore_permissions = True)\n      ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.139900",
  "module": "HIS",
  "name": "Checking Pharmacy Discount",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.percentage:\n    if doc.so_type==\"Pharmacy\" and doc.percentage>10 and frappe.session.user != \"Adminstrator\" and frappe.session.user != \"nura@jazeera.so\" :\n        frappe.throw(\"Fadlan hubi Discount-ka aad sameyneyso waxa uu ka badanyahy 10%\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "Daily",
  "modified": "2025-09-06 13:45:07.118413",
  "module": "HIS",
  "name": "Pricing",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": null,
  "script": "template = frappe.get_list(\"Lab Test Template\" , fields = ['name' , 'lab_test_rate', 'item'])\nfor i in template:\n    if frappe.db.exists(\"Item Price\" , {\"item_code\" : i.item} ):\n        item_name =  frappe.db.exists(\"Item Price\" , {\"item_code\" : i.item}  , 'name')\n        item_p = frappe.get_doc(\"Item Price\" , item_name)\n        item_p.price_list_rate = i.lab_test_rate\n        item_p.save()",
  "script_type": "Scheduler Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 1,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.057946",
  "module": "HIS",
  "name": "Return Over Payment Check",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Return",
  "script": "return_amount = doc.grand_total\ncust_balance = frappe.call(\n    \"erpnext.accounts.utils.get_balance_on\",\n    date=frappe.utils.getdate(),\n    party_type='Customer',\n    party=doc.customer\n)\n\nif return_amount > cust_balance:\n    frappe.throw(f\"Returning amount is greater Then customer Balance because customer balance is {cust_balance} and Returning amount is {return_amount} \")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.075936",
  "module": "HIS",
  "name": "Cancel Return Invoice",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Sales Return",
  "script": "if frappe.db.get_value(\"Sales Invoice\", {\"voucher_no\": doc.name}, \"name\"):\n    stock_entry= frappe.get_doc(\"Sales Invoice\",frappe.db.get_value(\"Sales Invoice\", {\"voucher_no\": doc.name}, \"name\"))\n    if stock_entry.docstatus==1:\n        stock_entry.cancel()\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:07.007830",
  "module": "HIS",
  "name": "Payment Entry",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Payment Entry",
  "script": "if doc.owner != frappe.session.user:\n    frappe.throw(\"You are not the owner of this This Payment Entry\")\n    ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Cancel",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-09-06 13:45:06.951976",
  "module": "HIS",
  "name": "Employee Receipt Avoid Cancel",
  "rate_limit_count": 0,
  "rate_limit_seconds": 0,
  "reference_doctype": "Employee Receipt",
  "script": "if doc.owner != frappe.session.user:\n    frappe.throw(\"You are not the owner of this This Payment Entry\")\n    ",
  "script_type": "DocType Event"
 }
]